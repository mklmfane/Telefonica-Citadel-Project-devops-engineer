# Default values for ping.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ealen/echo-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.7.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

jobs:
  enabled: true

#Challenege 1 - Question 1
#-------------------------
# Tolerations to allow pods to schedule on labeled nodes
#Taints are set on the nodes, and tolerations are set on the pods. 
#Tolerations allow the pods to schedule on the nodes with the matching taints.
#This is how we can prevent pods from scheduling in the other node group by isolating them
# Default values for ping.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tolerations:
  - key: "group"
    operator: "Equal"
    value: "group1"
    effect: "NoSchedule"
  - key: "group"
    operator: "Equal"
    value: "group2"
    effect: "NoSchedule"

#Challenege 1 - Question 2
#-------------------------
#app.kubernetes.io/name should be adjusted to the label key that represents your pod's type.
#ping should be replaced with the value of the label that identifies your specific pod type.
#kubernetes.io/hostname is used as the topologyKey, which ensures that pods are scheduled to nodes with different hostnames. 
#This effectively prevents pods of the same type from being scheduled on the same node.
affinity:
  nodeAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name # Adjust the key to the appropriate label for your pod type
              operator: In
              values:
                - ping # Label value for your pod type
        topologyKey: kubernetes.io/hostname # Use this key to spread pods across nodes
#Challenge 1 - Question 3
#I define the affinity settings to ensure that pods are deployed across different availability zones. 
#The specific labels topology.kubernetes.io/zone and values eu-west-1a, eu-west-1b, and eu-west-1c are specific to AWS availability zones 
#in the EU West (Dublin) region. 
#I should adjust these values according to the availability zones in your region.
      - nodeSelectorTerms:
          matchExpressions:
            - key: topology.kubernetes.io/zone
              operator: In
              values:
                - eu-west-1a
                - eu-west-1b
                - eu-west-1c
 

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
